{"version":3,"sources":["config.js","components/Graph.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","d3","require","Graph","props","useState","setNodes","setLinks","setMovies","newMovieID","setNewMovieID","shouldRender","handleAddMovie","e","preventDefault","alert","length","handleIDValidation","axios","get","then","response","firebase","database","ref","set","data","useEffect","apps","initializeApp","once","snapshot","val","keys","Object","node_objs","link_objs","push","type","id","i","poster","Poster","actors","Actors","split","j","some","elem","source","target","document","getElementById","appendChild","graph","obj_nodes","map","obj","create","obj_links","svg","attr","defs","append","forEach","d","link","selectAll","join","simulation","forceSimulation","force","forceLink","links","distance","forceManyBody","forceCenter","width","height","label","style","text","node","call","drag","on","event","active","alphaTarget","restart","fx","x","fy","y","select","raise","Navbar","bg","expand","Form","inline","className","onSubmit","FormControl","onChange","console","log","value","Button","variant","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e080bb78.chunk.js","sourcesContent":["const config = {\r\n    apiKey: \"AIzaSyA3PSDrSVY--kPeLB-6creeKMUc0jR-A5I\",\r\n    authDomain: \"misha-site.firebaseapp.com\",\r\n    databaseURL: \"https://misha-site.firebaseio.com\",\r\n  }\r\nexport default config;","import React, {useState, useEffect} from 'react';\r\nimport { Container, Navbar, Button, FormControl, Form} from \"react-bootstrap\";\r\nimport config from '../config';\r\nimport axios from \"axios\";\r\nimport firebase from \"firebase\";\r\nconst d3 = require(\"d3\");\r\n\r\n\r\n\r\nfunction Graph(props) {    \r\n    const [nodes, setNodes] = useState([]);\r\n    const [links, setLinks] = useState([]);\r\n    const [movies, setMovies] = useState({});\r\n    const [newMovieID, setNewMovieID] = useState(\"\");\r\n    const [shouldRender, setShouldRender] = useState(true);\r\n\r\n\r\n    function handleIDValidation() {\r\n        if (newMovieID === \"\") {\r\n          alert(\"ID cannot be empty.\");\r\n        } else if (newMovieID.length != 9) {\r\n          alert(\"ID should be 9 characters.\");\r\n        } else return true;\r\n        return false;\r\n    }\r\n    \r\n    function handleAddMovie(e) {\r\n        e.preventDefault();\r\n        if (handleIDValidation()) {\r\n            axios.get(\"https://www.omdbapi.com/?apikey=fe15e914&i=\" + newMovieID)\r\n                .then((response) => {\r\n                    firebase.database().ref(\"GraphMovies/\" + newMovieID)\r\n                        .set(response.data);\r\n                }\r\n            );\r\n            setNewMovieID(0);\r\n            alert(\"New movie submitted.\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config);\r\n        }\r\n        let ref = firebase.database().ref('GraphMovies');        \r\n        ref.once('value', (snapshot) => {\r\n            const val = snapshot.val();\r\n            const keys = Object.keys(val);\r\n            setMovies(val);\r\n            var node_objs = [];\r\n            var link_objs = [];\r\n            for(var i = 0; i < keys.length; i++) {\r\n                node_objs.push({\r\n                    type: \"movie\",\r\n                    id: keys[i],\r\n                    poster: val[keys[i]].Poster\r\n                });\r\n                const actors = val[keys[i]].Actors.split(\", \");\r\n                for(let j = 0; j < actors.length; j++) {\r\n                    if(!(node_objs.some((elem) => elem.id === actors[j]))) {\r\n                        node_objs.push({\r\n                            type: \"actor\",\r\n                            id: actors[j]\r\n                        });\r\n                    }\r\n                    link_objs.push({\r\n                        source: keys[i],\r\n                        target: actors[j]\r\n                    });\r\n                }\r\n            }\r\n            setNodes(node_objs);\r\n            setLinks(link_objs);\r\n            const elem = document.getElementById(\"svg\");\r\n            elem.appendChild(graph(node_objs, link_objs));\r\n        })\r\n    }, [shouldRender])\r\n\r\n    const drag = (simulation, label) => {\r\n        const dragStart = (d) => {\r\n            if(!d3.event.active) {\r\n                simulation.alphaTarget(0.3).restart();\r\n                d.fx = d.x;\r\n                d.fy = d.y;                \r\n            }\r\n        }\r\n\r\n        const dragging = (d) => {\r\n            d.fx = d3.event.x;\r\n            d.fy = d3.event.y;\r\n            label.attr(\"x\", d.x)\r\n                .attr(\"y\", d.y - 30);\r\n        }\r\n\r\n        const dragStop = (d) => {\r\n            if(!d3.event.active) {\r\n                simulation.alphaTarget(0);\r\n            }\r\n            d.fx = null;\r\n            d.fy = null;\r\n        }\r\n\r\n        return d3.drag()\r\n            .on(\"start\", dragStart)\r\n            .on(\"drag\", dragging)\r\n            .on(\"end\", dragStop);\r\n    }\r\n\r\n    const graph = (node_objs, link_objs) => {\r\n        const width = 2000;\r\n        const height = 1000;\r\n\r\n        const obj_nodes = node_objs.map(obj => Object.create(obj));\r\n        const obj_links = link_objs.map(obj => Object.create(obj));\r\n\r\n        const svg = d3.create(\"svg\")\r\n            .attr(\"viewBox\", [0, 0, width, height]);\r\n\r\n        var defs = svg.append(\"svg:defs\");\r\n\r\n        node_objs.forEach((d, i) => {\r\n            if(d.type === \"movie\") {\r\n                defs.append(\"svg:pattern\")\r\n                    .attr(\"id\", \"poster_\" + d.id)\r\n                    .attr(\"width\", 1) \r\n                    .attr(\"height\", 1)\r\n                    .attr(\"patternUnits\", \"objectBoundingBox\")\r\n                    .append(\"svg:image\")\r\n                    .attr(\"xlink:href\", d.poster)\r\n                    .attr(\"width\", 300)\r\n                    .attr(\"height\", 300)\r\n                    .attr(\"x\", -50)\r\n                    .attr(\"y\", -50);\r\n            }\r\n        })\r\n\r\n        const link = svg.append(\"g\")\r\n            .attr(\"stroke\", \"#999\")\r\n            .attr(\"stroke-opacity\", 0.5)\r\n            .selectAll(\"line\")\r\n            .data(obj_links)\r\n            .join(\"line\")\r\n            .attr(\"stroke-width\", 4);\r\n\r\n        const radius = (node) => {\r\n            if(node.type === \"movie\") {\r\n                return 90;\r\n            }\r\n            else if(node.type === \"actor\") {\r\n                return 20;\r\n            }\r\n        }\r\n\r\n        const color = (node) => {\r\n            if(node.type === \"movie\") {\r\n                return \"url(#poster_\" + node.id + \")\";\r\n            }\r\n            else if(node.type === \"actor\") {\r\n                return \"steelblue\";\r\n            }\r\n        }\r\n\r\n        const simulation = d3.forceSimulation(obj_nodes)\r\n            .force(\"link\", d3.forceLink().links(link_objs).id(d => { return d.id; }).distance(180))\r\n            .force(\"charge\", d3.forceManyBody())\r\n            .force(\"center\", d3.forceCenter(width / 2, height / 2));\r\n\r\n        const label = svg.append(\"text\")\r\n            .attr(\"id\", \"label\")\r\n            .attr(\"font-size\", 30)\r\n            .attr(\"opacity\", 0)\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(\"\");\r\n\r\n        const node = svg.append(\"g\")\r\n            .selectAll(\"circle\")\r\n            .data(obj_nodes)\r\n            .join(\"circle\")\r\n            .attr(\"r\", radius)\r\n            .style(\"fill\", color)\r\n            .call(drag(simulation, label));\r\n\r\n        node.on(\"mouseover\", (d) => {\r\n            if(d.type === \"actor\") {\r\n                var c = d3.select(this);\r\n                label\r\n                    .raise()\r\n                    .attr(\"opacity\", 1)\r\n                    .attr(\"x\", d.x)\r\n                    .attr(\"y\", d.y - 25)\r\n                    .text(d.id);\r\n            }\r\n        })\r\n        .on(\"mouseout\", (d) => {\r\n            if(d.type === \"actor\") {\r\n                label\r\n                    .attr(\"opacity\", 0)\r\n                    .text(d.id);\r\n            }\r\n        });\r\n\r\n        simulation.on(\"tick\", () => {\r\n            link\r\n                .attr(\"x1\", d => d.source.x)\r\n                .attr(\"y1\", d => d.source.y)\r\n                .attr(\"x2\", d => d.target.x)\r\n                .attr(\"y2\", d => d.target.y);\r\n            node\r\n                .attr(\"cx\", d => d.x)\r\n                .attr(\"cy\", d => d.y);\r\n        })\r\n        \r\n        return svg.node();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg = \"light\" expand = \"lg\">\r\n                Misha's Movie Graph App\r\n                <Form inline className = \"m-a\" onSubmit = {(e) => e.preventDefault()}>\r\n                    <FormControl \r\n                        className = \"ml-5\"\r\n                        type = \"text\"\r\n                        onChange = {(e) => {{e.preventDefault(); console.log(e.target.value); setNewMovieID(e.target.value)}}}\r\n                    />\r\n                    <Button\r\n                        className = \"ml-5\"\r\n                        variant = \"outline-success\"\r\n                        onClick = {(e) => handleAddMovie(e)}\r\n                    > Submit Movie ID </Button>\r\n                </Form>\r\n            </Navbar>\r\n            <div id=\"svg\"/>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Graph;","import React from 'react';\nimport './App.css';\nimport Graph from './components/Graph'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Graph/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}